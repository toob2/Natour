/*
we can treat the button as a component, coz its independent and reusable accross the whole page
*/

 /* 
 nesting - remember what '&' does? when its nested, you can use it instead of writing header__logo-box each time, you use &__logo-box
 SO THIS IS A RLY GOOD APPROACH WITH THE NESTING, COZ EVERYTHING IS ENCAPSULATED IN ONE BIG HEADER BLOCK
 */
 
  
.btn {
  &:link,
  &:visited {
    display: inline-block;
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem; 
    border-radius: 10rem;
    transition: all .2s ease-out;
    position: relative;
    font-size: $default-font-size;
   }
  
  &:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba($color-black, 0.2)
   }
 /*cant get this nested, it always breaks dunno why? */
  &:hover::after{
   transform: scaleX(1.5) scaleY(2);
   opacity: 0;
  }
  
  &:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.2)
  }
  
  &--white {
    background-color: $color-white;
    color:$color-grey-dark;
  }
  
  &--white::after {
    background-color: $color-white;
    color: $color-grey-dark;
  }
  
  &::after {
    content: '';
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0px;
    left: 0px;
    z-index: -1;
    transition: all .4s ease-out;
   }
 
  &--animated {
   animation: moveInBottom 0.5s ease-out .75s;
   animation-fill-mode: backwards;
   }
 }


 /*
 again we use inline-block coz we wanna be able to the model properties like padding or margin
 */
.button-text {
  &:link,
  &:visited {
    font-size: $default-font-size;
    display: inline-block;
    color: $color-primary;
    text-decoration: none;
    border-bottom: 1px solid $color-primary;
    padding: 3px;
    transition: all 0.5s; 
  }

  &:hover {
    background-color: $color-primary;
    color: $color-white;
    box-shadow: 0 1rem 2rem rgba($color-black, .15);
    transform: translateY(-0.3rem);
  }
  
  &:active {
    box-shadow: 0 0.5rem 1rem rgba($color-black, .15);
    transform: translateY(-0.1rem)
  }
}

/*
also as we are using the 1.6rem font-size a lot its a great idea to creat another variable $default-font-size. imagine going to the client presenting your work and he wants to increase some of the font sizes. do u prefer to do it 100x manually or just once in the variable???
*/